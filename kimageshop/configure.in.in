dnl Excluded from KDE 1.9x and 2.0 releases
DO_NOT_COMPILE="$DO_NOT_COMPILE kimageshop"

dnl ====================
dnl Checks for KImageShop
dnl =====================

dnl Beware, I'm not an m4-wizard, I just looked at existing macros and built 
dnl something suiting my needs. pfeiffer@kde.org

AC_MSG_CHECKING([for MMX])

AC_CACHE_VAL(kde_cv_have_mmx,
[
AC_LANG_C
kde_cv_have_mmx=no;

case "$host" in
  *86-*) x86=yes ;;
  *) x86=no
esac

if test "$x86" = "yes"; then

cat >> conftest.$ac_ext <<EOF
#include <stdio.h>

int detect_mmx()
{
  int mmx_bit;
  asm( "mov    %2, %%eax     \n\t"     // request for feature flag
       "cpuid                \n\t"     // get CPU ID flag
       "and    %1, %%edx     \n\t"     // check MMX bit (bit 23)
       "mov    %%edx, %0     \n\t"     // move result to mmx_bit

       :       "=m" (mmx_bit)          // %0
       :       "i"  (0x00000001),      // %1
               "i"  (0x00800000)       // %2
     );

  return mmx_bit;
}
int main()
{
  return detect_mmx();
}
EOF

ac_compile='${CC-gcc} $CFLAGS conftest.$ac_ext -o conftest'
if AC_TRY_EVAL(ac_compile); then
  if test ! `./conftest`; then
    kde_cv_have_mmx=yes;
    AC_DEFINE_UNQUOTED(HAVE_MMX, 1, [Define if you have a cpu with mmx])
  fi
fi
rm conftest*
fi
])

AC_MSG_RESULT($kde_cv_have_mmx)
