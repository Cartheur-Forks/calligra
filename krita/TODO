Krita TODO

Transform tool

	* It should use filter during scaling
	* The option widget should work
	* It should handle shearing and rotation


Integration

	* A krita document embedded in KWord has the wrong scaling and transparency
	* A krita document embedded in another document prints at the wrong place
	* write the Krita handbook.
	* There is currently no kimgio module for Krita images.


Colorspace independence (found with the test colorstrategy)

	* tool gradient uses wrong colors
	* brightness/contrast and the like don't work.
	* Map colorspace transforms using the full set of discriminating features:
		source color space (not null) // KisStrategyColorspace descendant
		destination color space (not null) // KisStrategyColorspace descendant
		source profile (may be null) // KisProfile
		destination profile (may be null) // KisProfile
		src lcms color type (may be 0) // frex (COLORSPACE_SH(PT_CMYK) | 
							CHANNELS_SH(4) |
							BYTES_SH(1) | EXTRA_SH(1)) for cmyka
		dst lcms color type (may be 0)
		rendering intent
        * Replace QColor with KisColor, where KisColor is a combination of a
          byte array and a pointer to a color model (note that we might have
          to retain a qcolor to/from conversion for color pickers and the like).
	* Make sure it's possible to, as in OpenEXR, be able to set the lighting stops.
	* get rid of QUANTUM
	* Check and double check the cms capabilities: especially the use of
          profiles in the render/convert/edit paths.
Core

	* Implement threading for rendering and paint device operations
	* Histogram computations (#Boudewijn)
	* Adjustment layers (Layers that dynamically apply a filter to
	  the layer they are linked to, these do not store actual
	  image date, except for an occasional mask) These should work on object
          layers (embedded KOFfice objects), too.
	* Mask layers
	* Layer groups or even better: a hierachy of collapsable folders with layers
	* Loading and saving of selections
	* Colorspace-aware difference between pixel function
	* Anti-aliased filling (requires some simple colorspace
	  function to merge 2 Pixels)
	* Load/save configuration of everything user-settable.
	* Make toolbox look like Karbon's toolbox, but follow the
	  layout of photoshop's toolbox for minimum confusability.
        * Lock layers (make inaccessible) See bug #90456.
	* Link/unlink layer sets a nice icon. but doesn't actually link the
          layer to anything.
	* Long painter operations (e.g., convolution painter) should use the 
          progressbar and be cancelable.
        * Add embedding of KOffice objects as layers.


File Format:

	* Save & load all annotations in .kra files
	* Save & load undo information in .kra files
	* Save & load more information, like PNG comments, gamma information, etc


Import/Export

	* File/Import and File/Export don't warn when exporting to
	  an unsupported filetype. (Still valid).
	* Photoshop files are not recognized when opened, but there is now an
	  option in the list of filetypes and that works.
        * Fix gimp XCF import/export (ImageMagick hacking...)
	* Fix imports to import metadata and image files in non-rgb encodings -> move import
	  export code to color strategies.


User Interface

	* Enable depth combo now that we have a 16bit/channel colorspace
	* Rounding in opacity spinner is wrong: what starts out as 100% is actually not OPACITY_MAX...
	* Channels showing (note that we don't do Gimp-type grayscale
	  mask channels, just showing/hiding the various color
	  channels.
        * Locked layers should really be protected from changes -- via a facade?
	* The description field in color settings is empty
        * Give color strategies an option page just like tools. Give layers an option page,
	  combine both pages to show for layer properties. Color strategies can be stateful.
	* Create brush-shape outline cursor
	* All dialogs ui-fied (#Boudewijn, Sven, Casper)
	* Implement the following dialogs / widgets:
		    - Variations (#Boudewijn)
		    - Gradient (nick from Scribus?)
		    - Histogram (#Boudewijn)
		    - Modify curves (nick from Perico)
	* Add previews to all relevant dialogs. (#Bart)
	* Improve the preview widget - see mail from June 21 2005
	* Show which tool is associated with which pointer (mouse, stylus, eraser, other stylusses)
	* Allow guides to be disabled. Allow diagonal guides (useful
	  for perspective drawings)
        * Allow snapping to guides.
        * Create templates for often-used image formats. Add save-as-template
	* Add menu item to zoom back to 1:1
	* Make rotate actions consistent between layer and image
	* Add deselect with rmb?
	* Move crop rectangle by dragging from within
	* Allow shape tools to be filled with gradients

	Dockers
		* Tabs in dockers drag-and-droppable (vector of docker
		  windows, create new docker if tab dropped outside existing
		  docker window)
		* Add bird's eye view tab to dockers.
		* Add action (macro) docker
		* Add navigation/zoom docker
		* Add history docker
                * Convert the layer & channel box to a qlistbox; enable the channel box.

        * Use OpenGL if available to composite checkerboard with image so
          while scrolling the checks can stay in place, and the partially
          transparent image move. This maybe needs Qt 4. OpenGL can also be
  	  used to bumpmap images on a height-field canvas.
	  we now have a checkered background layer that we composite everything
	  on, but in future we should composite the image first, and then render
	  it onto a background image -- or not, if another KOffice app wants it
	  rendered with transparency. But that'd probably better wait until Qt 4,
	  where it would be a hardware accelerated snip.


Selections

	* On shearing, the whole image is mirrored, not the selected
	  bits. 
	* Invent and implement ways to visualise selection masks in more
	  intelligent ways. When selecting a white area it should still be
	  visible that it has been selected. Should be user configurable and
	  globally implemented (ie not per layer)


Profiles

	* Add an input profile combobox to the import image & scan dialogs
	* Add an export profile combobox to the export image/print dialogs
        * Add loading and saving of profiles associated with images in .krita 
          files.
        * Export profiles in tiff, png and jpg (this and the previous item
          depend on ImageMagick or GraphicsMagick supporting this in some way.)
        * Support out-of-gamut warning indications for parts of an image 
          containing unprintable colours (no idea how to implement this). -> this
          is pretty easy with lcms


Tools

	* All tools must have a tool options tab (#Boudewijn, Adrian, Cyrille)
	
	* Implement the following tools: 
		    - fix airbrush tool (add rate option, add increase
		      of brush size if kept in one place)
		    - color changer, smudge tool,sharpen tool, blur
		      tool, dodge tool, burn tool, sponge tool (These
		      last are perhaps more generally: painting with
		      filters tool)
		    - stamp tool (paint with patttern/image selection) (#Cyrille)
		    - Text tool (use kotext with a transparent background here?)
		    - Measure tool
	            - calligraphic pen tool
         
	* Pressure sensivitize all relevant tools (e.g. line tool)
        * Add resize slider to freehand tools that resizes the mean brush size.
	* Divide the tools in tools and paint ops. Tools are:
	  freehand, rect, ellipse, curve, text, etc. Paintops are: pen, brush,
          filter, erase, select, deselect, airbrush etc.
	* Implement path tools
	* Sumi-e brush tool
	* Natural media tools (chalk, ink, oil, watercolour -- fun!)
	* The poly selection tool should be available, filled as a selection tool.


Plugins

	* As many filters as possible :-)
	* Load plugins into registry on Krita startup, instead of on
	  view creation. (Tried this, but failed miserable. BSAR)
	* The Variations plugin is just a mockup and does not use the same
          preview as the rest of Krita.
	* What's the difference between gamma correction and colour
	  adjustment? -> explained by Cyrille's mail, put this in handbook.
	* Improve brightness/contrast with curve manipulation and a nice GUI


Modules

	* Add color models for LAB, XYZ, HSV etc.
	* Finally fix CMYK
	* Add Wet & Sticky model (in progress already)
	* Implement Curtiss et. al. for watercolour (Levien, wet dreams. In progress)
        * Add channel-depths other than 8 bits. Through seperate colorspaces.
	* The composite ops in RGB -> composite.h do not take mask into account
	 - this goes for COPY and CLEAR in grayscale also

Printing

	* No CMYK separation for printing
	* No use of the resolution parameter (but the resolution dialog is still only a .ui file and not implemented at all)
	* Use gutenprint or something better for image printing.


Paintops
	* The convolution paintop doesn't do anything at all -- but it can be used using paint-by-filters.
