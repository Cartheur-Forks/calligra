Index: kptschedule.cc
===================================================================
--- kptschedule.cc	(revision 578220)
+++ kptschedule.cc	(revision 578221)
@@ -26,6 +26,7 @@
 
 #include <qdom.h>
 #include <qstring.h>
+#include <qstringlist.h>
 
 #include <klocale.h>
 #include <kdebug.h>
@@ -134,6 +135,17 @@
     }
 }
 
+QStringList Schedule::overbookedResources() const {
+    QStringList rl;
+    QPtrListIterator<Appointment> it = m_appointments;
+    for (; it.current(); ++it) {
+        if (it.current()->resource()->isOverbooked(it.current()->startTime(), it.current()->endTime())) {
+            rl += it.current()->resource()->resource()->name();
+        }
+    }
+    return rl;
+}
+
 bool Schedule::loadXML(const QDomElement &sch) {
     m_name = sch.attribute("name");
     setType(sch.attribute("type"));
@@ -615,10 +627,12 @@
     kdDebug()<<indent<<"Earliest start: "<<earliestStart.toString()<<endl;
     kdDebug()<<indent<<"Latest finish: " <<latestFinish.toString()<<endl;
 
-    kdDebug()<<indent<<"Resource overbooked="<<resourceOverbooked<<endl;
     kdDebug()<<indent<<"resourceError="<<resourceError<<endl;
     kdDebug()<<indent<<"schedulingError="<<schedulingError<<endl;
     kdDebug()<<indent<<"resourceNotAvailable="<<resourceNotAvailable<<endl;
+    kdDebug()<<indent<<"Resource overbooked="<<resourceOverbooked<<endl;
+    kdDebug()<<indent<<"  "<<overbookedResources()<<endl;
+
     kdDebug()<<indent<<"inCriticalPath="<<inCriticalPath<<endl;
     kdDebug()<<indent<<endl;
     kdDebug()<<indent<<"workStartTime="<<workStartTime.toString()<<endl;
Index: kptschedule.h
===================================================================
--- kptschedule.h	(revision 578220)
+++ kptschedule.h	(revision 578221)
@@ -28,6 +28,7 @@
 #include <qstring.h>
 
 class QDomElement;
+class QStringList;
 
 namespace KPlato
 {
@@ -101,7 +102,8 @@
     
     virtual bool isOverbooked() const { return false; }
     virtual bool isOverbooked(const DateTime &/*start*/, const DateTime &/*end*/) const { return false; }
-
+    virtual QStringList overbookedResources() const;
+    
     virtual EffortCostMap plannedEffortCostPrDay(const QDate &start, const QDate &end) const;
         
     /// Returns the total planned effort for this task (or subtasks) 
Index: kptganttview.cc
===================================================================
--- kptganttview.cc	(revision 578220)
+++ kptganttview.cc	(revision 578221)
@@ -55,6 +55,7 @@
 #include <qwidget.h>
 #include <qlabel.h>
 #include <qspinbox.h>
+#include <qstringlist.h>
 #include <qvaluelist.h>
 #include <qpainter.h> 
 #include <qpaintdevicemetrics.h> 
@@ -607,10 +608,6 @@
             sts += "\n" + i18n("No resource assigned");
             ok = false;
         }
-        if (task->resourceOverbooked()) {
-            sts += "\n" + i18n("Resource overbooked");
-            ok = false;
-        }
         if (task->resourceNotAvailable()) {
             sts += "\n" + i18n("Resource not available");
             ok = false;
@@ -619,6 +616,16 @@
             sts += "\n" + i18n("Scheduling conflict");
             ok = false;
         }
+        if (task->effortMetError()) {
+            sts += "\n" + i18n("Requested effort could not be met");
+            ok = false;
+        }
+        if (task->resourceOverbooked()) {
+            ok = false;
+            QStringList rl = task->overbookedResources();
+            sts += "\n" + i18n("arg: list of resources", "Resource overbooked: %1").arg(rl.join(","));
+            
+        }
         if (!m_showNoInformation && m_project && m_project->notScheduled()) {
             ok = false;
         }
