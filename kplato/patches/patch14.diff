Index: kpttask.cc
===================================================================
--- kpttask.cc	(revision 578225)
+++ kpttask.cc	(working copy)
@@ -650,11 +650,7 @@
         switch (constraint()) {
             case Node::ASAP:
             case Node::ALAP:
-                if (m_effort->type() == Effort::Type_Effort) {
-                    DateTime t = workStartAfter(cs->earliestStart);
-                    if (t.isValid())
-                         cs->earliestStart = t;
-                }
+                cs->earliestStart = workStartAfter(cs->earliestStart);
                 m_durationForward = duration(cs->earliestStart, use, false);
                 //kdDebug()<<k_funcinfo<<m_name<<": "<<cs->earliestStart<<"+"<<m_durationForward.toString()<<"="<<(cs->earliestStart+m_durationForward)<<endl;
                 break;
@@ -782,13 +778,7 @@
         switch (constraint()) {
             case Node::ASAP:
             case Node::ALAP:
-                if (m_effort->type() == Effort::Type_Effort) {
-                    DateTime t = workFinishBefore(cs->latestFinish);
-                    //kdDebug()<<k_funcinfo<<m_name<<": latestFinish="<<cs->latestFinish<<" t="<<t<<endl;
-                    if (t.isValid()) {
-                        cs->latestFinish = t;
-                    }
-                }
+                cs->latestFinish = workFinishBefore(cs->latestFinish);
                 m_durationBackward = duration(cs->latestFinish, use, true);
                 break;
             case Node::MustStartOn:
@@ -916,11 +906,7 @@
         case Node::ASAP:
             // cs->startTime calculated above
             //kdDebug()<<k_funcinfo<<m_name<<" startTime="<<cs->startTime<<endl;
-            if (m_effort->type() == Effort::Type_Effort) {
-                DateTime t = workStartAfter(cs->startTime);
-                if (t.isValid())
-                    cs->startTime = t;
-            }
+            cs->startTime = workStartAfter(cs->startTime);
             cs->duration = duration(cs->startTime, use, false);
             cs->endTime = cs->startTime + cs->duration;
             //kdDebug()<<k_funcinfo<<m_name<<" startTime="<<cs->startTime<<endl;
@@ -938,11 +924,7 @@
             if (cs->startTime < m_constraintStartTime) {
                 cs->startTime = m_constraintStartTime;
             }
-            if (m_effort->type() == Effort::Type_Effort) {
-                DateTime t = workStartAfter(cs->startTime);
-                if (t.isValid())
-                    cs->startTime = t;
-            }
+            cs->startTime = workStartAfter(cs->startTime);
             cs->duration = duration(cs->startTime, use, false);
             cs->endTime = cs->startTime + cs->duration;
             if (cs->endTime > cs->latestFinish) {
@@ -1116,12 +1098,7 @@
         case Node::ASAP: {
             // cs->endTime calculated above
             //kdDebug()<<k_funcinfo<<m_name<<": end="<<cs->endTime<<"  early="<<cs->earliestStart<<endl;
-            if (m_effort->type() == Effort::Type_Effort) {
-                DateTime t = workFinishBefore(cs->endTime);
-                //kdDebug()<<k_funcinfo<<m_name<<": end="<<cs->endTime<<" t="<<t<<endl;
-                if (t.isValid())
-                    cs->endTime = t;
-            }
+            cs->endTime = workFinishBefore(cs->endTime);
             cs->duration = duration(cs->earliestStart, use, false);
             cs->startTime = cs->earliestStart;
             DateTime e = cs->startTime + cs->duration;
@@ -1135,12 +1112,7 @@
         case Node::ALAP:
             // cs->endTime calculated above
             //kdDebug()<<k_funcinfo<<m_name<<": end="<<cs->endTime<<"  late="<<cs->latestFinish<<endl;
-            if (m_effort->type() == Effort::Type_Effort) {
-                DateTime t = workFinishBefore(cs->endTime);
-                //kdDebug()<<k_funcinfo<<m_name<<": end="<<cs->endTime<<" t="<<t<<endl;
-                if (t.isValid())
-                    cs->endTime = t;
-            }
+            cs->endTime = workFinishBefore(cs->endTime);
             cs->duration = duration(cs->endTime, use, true);
             cs->startTime = cs->endTime - cs->duration;
             //kdDebug()<<k_funcinfo<<m_name<<": lateStart="<<cs->startTime<<endl;
@@ -1148,12 +1120,7 @@
         case Node::StartNotEarlier:
             // cs->endTime calculated above
             //kdDebug()<<"StartNotEarlier="<<m_constraintStartTime.toString()<<" "<<cs->endTime.toString()<<endl;
-            if (m_effort->type() == Effort::Type_Effort) {
-                DateTime t = workFinishBefore(cs->endTime);
-                //kdDebug()<<k_funcinfo<<m_name<<": end="<<cs->endTime<<" t="<<t<<endl;
-                if (t.isValid())
-                    cs->endTime = t;
-            }
+            cs->endTime = workFinishBefore(cs->endTime);
             cs->duration = duration(cs->endTime, use, true);
             cs->startTime = cs->endTime - cs->duration;
             if (cs->startTime < m_constraintStartTime) {
@@ -1170,12 +1137,7 @@
                 cs->schedulingError = true;
                 cs->endTime = m_constraintEndTime;
             }
-            if (m_effort->type() == Effort::Type_Effort) {
-                DateTime t = workFinishBefore(cs->endTime);
-                //kdDebug()<<k_funcinfo<<m_name<<": end="<<cs->endTime<<" t="<<t<<endl;
-                if (t.isValid())
-                    cs->endTime = t;
-            }
+            cs->endTime = workFinishBefore(cs->endTime);
             cs->duration = duration(cs->endTime, use, true);
             cs->startTime = cs->endTime - cs->duration;
             break;
