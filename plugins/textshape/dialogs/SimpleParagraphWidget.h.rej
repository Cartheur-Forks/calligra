--- plugins/textshape/dialogs/SimpleParagraphWidget.h	(revision 1146719)
+++ plugins/textshape/dialogs/SimpleParagraphWidget.h	(working copy)
@@ -1,5 +1,6 @@
 /* This file is part of the KDE project
  * Copyright (C) 2007 Thomas Zander <zander@kde.org>
+ * Copyright (C) 2010 Casper Boemann <cbo@boemann.dk>
  *
  * This library is free software; you can redistribute it and/or
  * modify it under the terms of the GNU Library General Public
@@ -16,11 +17,10 @@
  * the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
  * Boston, MA 02110-1301, USA.
  */
-#ifndef SIMPLESTYLEWIDGET_H
-#define SIMPLESTYLEWIDGET_H
+#ifndef SIMPLEPARAGRAPHWIDGET_H
+#define SIMPLEPARAGRAPHWIDGET_H
 
-#include <ui_SimpleStyleWidget.h>
-#include <KoListStyle.h>
+#include <ui_SimpleParagraphWidget.h>
 
 #include <QWidget>
 #include <QTextBlock>
@@ -28,24 +28,23 @@
 class TextTool;
 class KoStyleManager;
 
-class SimpleStyleWidget : public QWidget
+class SimpleParagraphWidget : public QWidget
 {
     Q_OBJECT
 public:
-    explicit SimpleStyleWidget(TextTool *tool, QWidget *parent = 0);
+    explicit SimpleParagraphWidget(TextTool *tool, QWidget *parent = 0);
 
 public slots:
     void setCurrentBlock(const QTextBlock &block);
     void setStyleManager(KoStyleManager *sm);
-    void setCurrentFormat(const QTextCharFormat& format);
 
 signals:
     void doneWithFocus();
+    void insertTableQuick(int, int);
 
 private slots:
-    void listStyleChanged(int row);
     void directionChangeRequested();
-    void applyAgainPressed();
+    void listStyleChanged(int id);
 
 private:
     enum DirectionButtonState {
@@ -55,16 +54,16 @@
     };
 
     void updateDirection(DirectionButtonState state);
-    void fillListsCombobox();
 
-    Ui::SimpleStyleWidget widget;
+
+    void fillListButtons();
+
+    Ui::SimpleParagraphWidget widget;
     KoStyleManager *m_styleManager;
     bool m_blockSignals;
-    bool m_comboboxHasBidiItems;
     QTextBlock m_currentBlock;
     TextTool *m_tool;
     DirectionButtonState m_directionButtonState;
-    KoListStyle::Style m_quickApplyListStyle;
 };
 
 #endif
